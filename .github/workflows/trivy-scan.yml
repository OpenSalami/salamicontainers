name: Trivy Security Scan

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

jobs:
  trivy-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Trivy
        run: |
          wget -qO- https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh
          sudo mv ./bin/trivy /usr/local/bin/

      - name: Install GitHub CLI
        run: sudo apt-get update && sudo apt-get install -y gh

      - name: Scan all GHCR images for vulnerabilities
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TRIVY_USERNAME: ${{ github.actor }}
          TRIVY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        run: |
          owner=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          repo=$(basename "${GITHUB_REPOSITORY}")
          # Use /orgs for organizations
          images=$(gh api -H "Accept: application/vnd.github+json" /orgs/$owner/packages?package_type=container | jq -r '.[].name' | grep "^$repo" || true)
          if [ -z "$images" ]; then
            echo "No GHCR images found for this repo."
            exit 0
          fi
          for image in $images; do
            tags=$(gh api -H "Accept: application/vnd.github+json" /orgs/$owner/packages/container/$image/versions | jq -r '.[].metadata.container.tags[]' | sort -u)
            for tag in $tags; do
              full_image="ghcr.io/$owner/$image:$tag"
              echo "Scanning $full_image"
              echo "$TRIVY_PASSWORD" | trivy image --severity CRITICAL --format table --output "trivy-image-$image-$tag.txt" --username "$TRIVY_USERNAME" --password-stdin "$full_image" || true
              cat "trivy-image-$image-$tag.txt"
            done
          done